from itertools import permutations
def total_cost(assignment, cost_matrix):
    return sum(cost_matrix[i][j] for i, j in assignment)
def assignment_problem(cost_matrix):
    n = len(cost_matrix)
    workers = range(n)
    best_cost = float('inf')
    best_assignment = []
    for perm in permutations(workers):
        assignment = list(zip(workers, perm))
        cost = total_cost(assignment, cost_matrix)
        if cost < best_cost:
            best_cost, best_assignment = cost, assignment
 return best_assignment, best_cost
cost_matrix1 = [[3, 10, 7], [8, 5, 12], [4, 6, 9]]
cost_matrix2 = [[15, 9, 4], [8, 7, 18], [6, 12, 11]]
print("Test Case 1:", assignment_problem(cost_matrix1))  
print("Test Case 2:", assignment_problem(cost_matrix2))  
Output:[(0, 1), (1, 0), (2, 2)], Total Cost: 19
      [(0, 2), (1, 0), (2, 1)], Total Cost: 24
