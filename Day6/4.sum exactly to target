from itertools import combinations
def meet_in_the_middle(arr, target):
    n = len(arr)
    left, right = arr[:n//2], arr[n//2:]
    left_sums = {sum(comb) for r in range(len(left)+1) for comb in combinations(left, r)}
    right_sums = {sum(comb) for r in range(len(right)+1) for comb in combinations(right, r)}
    for l in left_sums:
        if (target - l) in right_sums:
            return True
    return False
print(meet_in_the_middle([1, 3, 9, 2, 7, 12], 15))  
print(meet_in_the_middle([3, 34, 4, 12, 5, 2], 15)) 
Output: True
        True
