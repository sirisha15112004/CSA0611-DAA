from itertools import permutations
def min_path_distance(matrix):
    n = len(matrix)
    return min(
        sum(matrix[path[i]][path[i + 1]] for i in range(n - 1)) + matrix[path[-1]][path[0]]  # Round trip
        for path in permutations(range(n))
    )
test_cases = [
    [[0, 10, 15, 20], [10, 0, 35, 25], [15, 35, 0, 30], [20, 25, 30, 0]],  
    [[0, 10, 10, 10], [10, 0, 10, 10], [10, 10, 0, 10], [10, 10, 10, 0]],  
    [[0, 1, 2, 3], [1, 0, 4, 5], [2, 4, 0, 6], [3, 5, 6, 0]]              
]
for matrix in test_cases:
    print(min_path_distance(matrix))
Output: 80
        40
        12
